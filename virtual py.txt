# Activate the virtual environment  phyton
source ~/myenv/bin/activate
cd /var/www/html/ai/
deactivate

#جدید (newChatbotPanel)
cd /var/www/html/ai/backend
source venv/bin/activate
uvicorn app.main:app --reload
uvicorn app.main:app --reload --host 0.0.0.0 --port 5000

ثبت کاربر جدید
curl -X POST http://localhost:5000/api/register -H "Content-Type: application/json" -d '{"email": "admin@example.com", "password": "admin123"}'

ورود و دریافت توکن
curl -X POST http://localhost:5000/api/token -H "Content-Type: application/x-www-form-urlencoded" -d "username=admin@example.com&password=admin123"

درخواست کراول کردن سایت
curl -X POST http://localhost:5000/api/websites/crawl \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {TOKEN}" \
  -d '{"url": "https://parsicanada.com"}'

بررسی سایت کراول شده
curl -X GET http://localhost:5000/api/websites/{ID} -H "Authorization: Bearer {TOKEN}"



npm install
npm start
این دستورات وابستگی‌ها را نصب کرده و برنامه را در حالت توسعه اجرا می‌کنند. برنامه در آدرس http://localhost:3000 قابل دسترسی خواهد بود.

#جدید (newChatbotFormat) 
uvicorn api.routes:app --reload --port 5000
OR
pkill -f "uvicorn api.routes:app" && uvicorn api.routes:app --reload --port 5000

curl -X POST "http://127.0.0.1:5000/register?domain=parsicanada.com"
curl "http://127.0.0.1:5000/api/crawl-status/customer_id"
curl -X POST "http://127.0.0.1:5000/api/chat" -H "Content-Type: application/json" -H "X-Customer-ID: customer_id" -d '{"text": "لطفاً درباره پارسی کانادا توضیح بده"}'

sudo lsof -i :5000
sudo kill -9 PID
sudo pkill -9 uvicorn


# قبل (main) 
 پاک کردن داده‌های قبلی
rm -rf processed_data/parsicanada.com
 اجرای مجدد فاز 1
python run_phase1.py https://parsicanada.com --max-pages 20
 اجرای فاز 2
python run_phase2.py parsicanada.com --server --type gemini --port 5000
--type online: استفاده از OpenAI
--type local: استفاده از Ollama
--type gemini: استفاده از Google Gemini



لطفا پروژه من رو بصورت کامل بررسی کن. این سیستم در حال حاضر توسط ترمینال یک آدرس سایت بهش میدم مثل این
|python run_phase1.py https://parsicanada.com --max-pages 20
که میره کرال میکنه و همه اطلاعات مورد نیاز رو جمع میکنه. بعد از اون
توسط این دستور میره توسط فایل هایی که ایجاد شده برای اون رو پردازش میکنه و امبد میکنه و در نهایت یک رگ کامل در دیتابیس ذخیره میکنه
python run_phase2.py parsicanada.com --server --type gemini --port 5000

حالا چیزی که نیاز دارم اینه که ساختار تغییر کنه و خودکار بشه به این صورت که سرور اجرا بشه و کاربر ها بتونن سایت های خودشون رو وارد کنن و سیستم سایتشون رو کرال کنه و رگ بسازه و در نهایت یک کد جی اس بسازه و بده به کاربر که بذاره توی سایتش و مشتریهاش بتونن با چت بات هوش مصنوعی کار کنن. یک ساختار پیشرفته و صحیح نیاز دارم برای این کار
بک اند مشخص بشه. فرات مشخص بشه. وب سرویس ها مشخص بشه

خب ازت میخوام کمکم کنی که این پروژه رو تکمیل کنم.

این یک پروژه چت‌بات هوشمند است که از چند بخش اصلی تشکیل شده:

1. **بخش سرور (Backend)**:
   - با استفاده از Flask نوشته شده
   - قابلیت پشتیبانی از سه نوع مدل هوش مصنوعی:
     - OpenAI (GPT)
     - مدل محلی (Local)
     - Google Gemini
   - سیستم مدیریت تاریخچه چت
   - قابلیت استخراج منابع و مراجع از پاسخ‌ها

2. **بخش کاربری (Frontend)**:
   - رابط کاربری وب
   - پنل مدیریت
   - ویجت قابل تعبیه
   - فایل‌های استاتیک

3. **ویژگی‌های اصلی**:
   - استفاده از تکنیک RAG (Retrieval-Augmented Generation) برای پاسخ‌دهی دقیق‌تر
   - پشتیبانی از چندین مدل هوش مصنوعی
   - ذخیره تاریخچه گفتگوها
   - نمایش منابع و مراجع پاسخ‌ها
   - API برای ارتباط با چت‌بات

4. **ساختار پروژه**:
   - تقسیم‌بندی منظم به بخش‌های مختلف
   - پشتیبانی از Docker برای اجرای راحت‌تر
   - مدیریت تنظیمات
   - ابزارهای ایجاد و مدیریت پایگاه دانش

نحوه کار سیستم:
1. کاربر سوالی می‌پرسد
2. سیستم در پایگاه دانش جستجو می‌کند
3. اطلاعات مرتبط را پیدا می‌کند
4. با استفاده از مدل هوش مصنوعی انتخاب شده، پاسخ را تولید می‌کند
5. پاسخ را همراه با منابع و مراجع به کاربر نمایش می‌دهد

آیا مایلید در مورد بخش خاصی از پروژه توضیحات بیشتری ارائه دهم؟ یا سوال خاصی در مورد نحوه کارکرد بخش‌های مختلف دارید؟

بله، حتما. من به شما کمک می‌کنم تا این سیستم رو به صورت مرحله به مرحله توسعه بدیم. بیایید پروژه رو به چند فاز تقسیم کنیم:

**فاز 1: بهبود سیستم جمع‌آوری داده**
1. ایجاد یک API برای دریافت URL سایت
2. توسعه سیستم کراولینگ هوشمند که:
   - صفحات مهم سایت رو شناسایی کنه
   - محتوای مرتبط رو استخراج کنه
   - ساختار سایت رو حفظ کنه
   - تصاویر و فایل‌های مرتبط رو ذخیره کنه

**فاز 2: بهبود سیستم پردازش داده**
1. توسعه سیستم پردازش متن برای:
   - حذف محتوای اضافی
   - دسته‌بندی محتوا
   - استخراج کلمات کلیدی
   - ایجاد خلاصه برای هر بخش
2. بهبود سیستم ایجاد امبدینگ
3. بهینه‌سازی ذخیره‌سازی داده‌ها

**فاز 3: توسعه پنل مدیریت**
1. ایجاد داشبورد مدیریت برای:
   - مشاهده سایت‌های اضافه شده
   - مدیریت محتوای هر سایت
   - تنظیمات چت‌بات
   - آمار و گزارش‌ها
2. سیستم احراز هویت و مدیریت کاربران

**فاز 4: توسعه ویجت چت‌بات**
1. ایجاد ویجت قابل شخصی‌سازی:
   - تغییر ظاهر
   - تنظیم زبان
   - شخصی‌سازی پاسخ‌ها
2. اضافه کردن قابلیت‌های تعاملی:
   - ارسال فایل
   - نمایش محصولات
   - رزرو وقت
   - فرم‌های تماس

**فاز 5: بهبود سیستم پاسخ‌دهی**
1. توسعه سیستم RAG پیشرفته
2. اضافه کردن قابلیت‌های جدید:
   - پشتیبانی از چند زبان
   - تشخیص نیات کاربر
   - پاسخ‌های شخصی‌سازی شده
   - یادگیری از تعاملات

**فاز 6: بهینه‌سازی و مقیاس‌پذیری**
1. بهبود عملکرد سیستم
2. اضافه کردن کش‌ینگ
3. بهینه‌سازی مصرف منابع
4. پشتیبانی از چندین سرور

بیایید با فاز 1 شروع کنیم. برای شروع، من پیشنهاد می‌کنم:

1. اول یک API برای دریافت URL سایت ایجاد کنیم
2. سپس سیستم کراولینگ رو توسعه بدیم
3. در نهایت سیستم پردازش اولیه داده رو پیاده‌سازی کنیم

آیا مایلید با فاز 1 شروع کنیم؟ من می‌تونم کدهای لازم رو براتون آماده کنم و راهنمایی‌تون کنم.

